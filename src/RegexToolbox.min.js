"use strict";Array.prototype.has=function(item){return this.indexOf(item)>-1};class RegexQuantifier{_regexString;constructor(regexString,greedy){var validPattern;if(!/(\*|\+|\?|{\d+}|{\d+,}|{\d+,\d+})\??/.test(regexString))throw new Error("Invalid regexString");_regexString=regexString}butAsFewAsPossible(){if(!greedy)throw new Error("butAsFewAsPossible() can't be called on this quantifier");return new RegexQuantifier(_regexString+"?",!1)}regexString(){return _regexString}static zeroOrMore=new RegexQuantifier("*",!0);static oneOrMore=new RegexQuantifier("+",!0);static noneOrOne=new RegexQuantifier("?",!0);static exactly(times){return new RegexQuantifier("{"+times+"}",!1)}static atLeast(minimum){return new RegexQuantifier("{"+minimum+",}",!0)}static noMoreThan(maximum){return new RegexQuantifier("{0,"+maximum+"}",!0)}static between(minimum,maximum){return new RegexQuantifier("{"+minimum+","+maximum+"}",!0)}}var RegexOptions={IGNORE_CASE:"option-ignore-case",MATCH_ALL:"option-match-all",MULTI_LINE:"option-multi-line"},RegexBuilder=function(){var _openGroupCount=0,_regexString="",makeSafeForRegex=function(text){return text.replace("\\","\\\\").replace("?","\\?").replace(".","\\.").replace("+","\\+").replace("*","\\*").replace("^","\\^").replace("$","\\$").replace("(","\\(").replace(")","\\)").replace("[","\\[").replace("]","\\]").replace("{","\\{").replace("}","\\}").replace("|","\\|")},makeSafeForCharacterClass=function(text){var result=text.replace("]","\\]");return 0===(result=result.replace("-","\\-")).indexOf("^")&&(result="\\"+result),result},addQuantifier=function(quantifier){if(quantifier){if(!(quantifier instanceof RegexQuantifier))throw new Error("quantifier must be a RegexQuantifier");_regexString+=quantifier.regexString()}},isString=function(s){return"string"==typeof s||s instanceof String};this.buildRegex=function(options){if(1===_openGroupCount)throw new Error("One group is still open");if(_openGroupCount>1)throw new Error(_openGroupCount+" groups are still open");var flags="";options&&(options instanceof Array||(options=[options]),options.has(RegexOptions.MATCH_ALL)&&(flags+="g"),options.has(RegexOptions.IGNORE_CASE)&&(flags+="i"),options.has(RegexOptions.MULTI_LINE)&&(flags+="m"));var regex=new RegExp(_regexString,flags);return _regexString="",regex},this.text=function(text,quantifier){if(null==text||0===text.length)return this;if(!isString(text))throw new Error("text must be a string");return this.regexText(makeSafeForRegex(text),quantifier)},this.regexText=function(text,quantifier){if(null==text||0===text.length)return this;if(!isString(text))throw new Error("text must be a string");return quantifier?this.startNonCapturingGroup().regexText(text).endGroup(quantifier):(_regexString+=text,this)},this.anyCharacter=function(quantifier){return _regexString+=".",addQuantifier(quantifier),this},this.whitespace=function(quantifier){return _regexString+="\\s",addQuantifier(quantifier),this},this.nonWhitespace=function(quantifier){return _regexString+="\\S",addQuantifier(quantifier),this},this.digit=function(quantifier){return _regexString+="\\d",addQuantifier(quantifier),this},this.nonDigit=function(quantifier){return _regexString+="\\D",addQuantifier(quantifier),this},this.letter=function(quantifier){return _regexString+="[a-zA-Z]",addQuantifier(quantifier),this},this.nonLetter=function(quantifier){return _regexString+="[^a-zA-Z]",addQuantifier(quantifier),this},this.uppercaseLetter=function(quantifier){return _regexString+="[A-Z]",addQuantifier(quantifier),this},this.lowercaseLetter=function(quantifier){return _regexString+="[a-z]",addQuantifier(quantifier),this},this.letterOrDigit=function(quantifier){return _regexString+="[a-zA-Z0-9]",addQuantifier(quantifier),this},this.nonLetterOrDigit=function(quantifier){return _regexString+="[^a-zA-Z0-9]",addQuantifier(quantifier),this},this.hexDigit=function(quantifier){return _regexString+="[0-9A-Fa-f]",addQuantifier(quantifier),this},this.uppercaseHexDigit=function(quantifier){return _regexString+="[0-9A-F]",addQuantifier(quantifier),this},this.lowercaseHexDigit=function(quantifier){return _regexString+="[0-9a-f]",addQuantifier(quantifier),this},this.nonHexDigit=function(quantifier){return _regexString+="[^0-9A-Fa-f]",addQuantifier(quantifier),this},this.wordCharacter=function(quantifier){return _regexString+="\\w",addQuantifier(quantifier),this},this.nonWordCharacter=function(quantifier){return _regexString+="\\W",addQuantifier(quantifier),this},this.anyCharacterFrom=function(characters,quantifier){return _regexString+="["+makeSafeForCharacterClass(characters)+"]",addQuantifier(quantifier),this},this.anyCharacterExcept=function(characters,quantifier){return _regexString+="[^"+makeSafeForCharacterClass(characters)+"]",addQuantifier(quantifier),this},this.anyOf=function(textArray,quantifier){return null==textArray?this:textArray instanceof Array?1===textArray.length?this.text(textArray[0],quantifier):textArray.length>1?this.startNonCapturingGroup().regexText(textArray.map((function(t){return makeSafeForRegex(t)})).join("|")).endGroup(quantifier):this:this.text(textArray,quantifier)},this.startOfString=function(){return _regexString+="^",this},this.endOfString=function(){return _regexString+="$",this},this.wordBoundary=function(){return _regexString+="\\b",this},this.startGroup=function(){return _regexString+="(",_openGroupCount++,this},this.startNonCapturingGroup=function(){return _regexString+="(?:",_openGroupCount++,this},this.endGroup=function(quantifier){if(0===_openGroupCount)throw new Error("Cannot call endGroup() until a group has been started with startGroup()");return _regexString+=")",_openGroupCount--,addQuantifier(quantifier),this}};